/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace NetFramework.Auto
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class SCChatMsg : TBase
  {
    private NetFramework.Auto.ChatContentType _chatContentType;
    private NetFramework.Auto.SendChatEquipInfo _equipInfo;
    private NetFramework.Auto.SendChatHeroInfo _heroInfo;
    private NetFramework.Auto.SendChatItemInfo _itemInfo;
    private NetFramework.Auto.SendChatTeamInfo _teamInfo;
    private NetFramework.Auto.SendChatGangInfo _gangInfo;

    /// <summary>
    /// 
    /// <seealso cref="NetFramework.Auto.ChatChannel"/>
    /// </summary>
    public NetFramework.Auto.ChatChannel ChatChannel { get; set; }

    public NetFramework.Auto.SendChatCharInfo SendCharCharInfo { get; set; }

    public string Content { get; set; }

    /// <summary>
    /// 
    /// <seealso cref="NetFramework.Auto.ChatContentType"/>
    /// </summary>
    public NetFramework.Auto.ChatContentType ChatContentType
    {
      get
      {
        return _chatContentType;
      }
      set
      {
        __isset.chatContentType = true;
        this._chatContentType = value;
      }
    }

    public NetFramework.Auto.SendChatEquipInfo EquipInfo
    {
      get
      {
        return _equipInfo;
      }
      set
      {
        __isset.equipInfo = true;
        this._equipInfo = value;
      }
    }

    public NetFramework.Auto.SendChatHeroInfo HeroInfo
    {
      get
      {
        return _heroInfo;
      }
      set
      {
        __isset.heroInfo = true;
        this._heroInfo = value;
      }
    }

    public NetFramework.Auto.SendChatItemInfo ItemInfo
    {
      get
      {
        return _itemInfo;
      }
      set
      {
        __isset.itemInfo = true;
        this._itemInfo = value;
      }
    }

    public NetFramework.Auto.SendChatTeamInfo TeamInfo
    {
      get
      {
        return _teamInfo;
      }
      set
      {
        __isset.teamInfo = true;
        this._teamInfo = value;
      }
    }

    public NetFramework.Auto.SendChatGangInfo GangInfo
    {
      get
      {
        return _gangInfo;
      }
      set
      {
        __isset.gangInfo = true;
        this._gangInfo = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool chatContentType;
      public bool equipInfo;
      public bool heroInfo;
      public bool itemInfo;
      public bool teamInfo;
      public bool gangInfo;
    }

    public SCChatMsg() {
    }

    public SCChatMsg(NetFramework.Auto.ChatChannel chatChannel, NetFramework.Auto.SendChatCharInfo sendCharCharInfo, string content) : this() {
      this.ChatChannel = chatChannel;
      this.SendCharCharInfo = sendCharCharInfo;
      this.Content = content;
    }

    public void Read (TProtocol iprot)
    {
      bool isset_chatChannel = false;
      bool isset_sendCharCharInfo = false;
      bool isset_content = false;
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 10:
            if (field.Type == TType.I32) {
              ChatChannel = (NetFramework.Auto.ChatChannel)iprot.ReadI32();
              isset_chatChannel = true;
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 60:
            if (field.Type == TType.Struct) {
              SendCharCharInfo = new NetFramework.Auto.SendChatCharInfo();
              SendCharCharInfo.Read(iprot);
              isset_sendCharCharInfo = true;
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 70:
            if (field.Type == TType.String) {
              Content = iprot.ReadString();
              isset_content = true;
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 80:
            if (field.Type == TType.I32) {
              ChatContentType = (NetFramework.Auto.ChatContentType)iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 90:
            if (field.Type == TType.Struct) {
              EquipInfo = new NetFramework.Auto.SendChatEquipInfo();
              EquipInfo.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 100:
            if (field.Type == TType.Struct) {
              HeroInfo = new NetFramework.Auto.SendChatHeroInfo();
              HeroInfo.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 110:
            if (field.Type == TType.Struct) {
              ItemInfo = new NetFramework.Auto.SendChatItemInfo();
              ItemInfo.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 120:
            if (field.Type == TType.Struct) {
              TeamInfo = new NetFramework.Auto.SendChatTeamInfo();
              TeamInfo.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 130:
            if (field.Type == TType.Struct) {
              GangInfo = new NetFramework.Auto.SendChatGangInfo();
              GangInfo.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
      if (!isset_chatChannel)
        throw new TProtocolException(TProtocolException.INVALID_DATA);
      if (!isset_sendCharCharInfo)
        throw new TProtocolException(TProtocolException.INVALID_DATA);
      if (!isset_content)
        throw new TProtocolException(TProtocolException.INVALID_DATA);
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("SCChatMsg");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      field.Name = "chatChannel";
      field.Type = TType.I32;
      field.ID = 10;
      oprot.WriteFieldBegin(field);
      oprot.WriteI32((int)ChatChannel);
      oprot.WriteFieldEnd();
      field.Name = "sendCharCharInfo";
      field.Type = TType.Struct;
      field.ID = 60;
      oprot.WriteFieldBegin(field);
      SendCharCharInfo.Write(oprot);
      oprot.WriteFieldEnd();
      field.Name = "content";
      field.Type = TType.String;
      field.ID = 70;
      oprot.WriteFieldBegin(field);
      oprot.WriteString(Content);
      oprot.WriteFieldEnd();
      if (__isset.chatContentType) {
        field.Name = "chatContentType";
        field.Type = TType.I32;
        field.ID = 80;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32((int)ChatContentType);
        oprot.WriteFieldEnd();
      }
      if (EquipInfo != null && __isset.equipInfo) {
        field.Name = "equipInfo";
        field.Type = TType.Struct;
        field.ID = 90;
        oprot.WriteFieldBegin(field);
        EquipInfo.Write(oprot);
        oprot.WriteFieldEnd();
      }
      if (HeroInfo != null && __isset.heroInfo) {
        field.Name = "heroInfo";
        field.Type = TType.Struct;
        field.ID = 100;
        oprot.WriteFieldBegin(field);
        HeroInfo.Write(oprot);
        oprot.WriteFieldEnd();
      }
      if (ItemInfo != null && __isset.itemInfo) {
        field.Name = "itemInfo";
        field.Type = TType.Struct;
        field.ID = 110;
        oprot.WriteFieldBegin(field);
        ItemInfo.Write(oprot);
        oprot.WriteFieldEnd();
      }
      if (TeamInfo != null && __isset.teamInfo) {
        field.Name = "teamInfo";
        field.Type = TType.Struct;
        field.ID = 120;
        oprot.WriteFieldBegin(field);
        TeamInfo.Write(oprot);
        oprot.WriteFieldEnd();
      }
      if (GangInfo != null && __isset.gangInfo) {
        field.Name = "gangInfo";
        field.Type = TType.Struct;
        field.ID = 130;
        oprot.WriteFieldBegin(field);
        GangInfo.Write(oprot);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("SCChatMsg(");
      sb.Append("ChatChannel: ");
      sb.Append(ChatChannel);
      sb.Append(",SendCharCharInfo: ");
      sb.Append(SendCharCharInfo== null ? "<null>" : SendCharCharInfo.ToString());
      sb.Append(",Content: ");
      sb.Append(Content);
      sb.Append(",ChatContentType: ");
      sb.Append(ChatContentType);
      sb.Append(",EquipInfo: ");
      sb.Append(EquipInfo== null ? "<null>" : EquipInfo.ToString());
      sb.Append(",HeroInfo: ");
      sb.Append(HeroInfo== null ? "<null>" : HeroInfo.ToString());
      sb.Append(",ItemInfo: ");
      sb.Append(ItemInfo== null ? "<null>" : ItemInfo.ToString());
      sb.Append(",TeamInfo: ");
      sb.Append(TeamInfo== null ? "<null>" : TeamInfo.ToString());
      sb.Append(",GangInfo: ");
      sb.Append(GangInfo== null ? "<null>" : GangInfo.ToString());
      sb.Append(")");
      return sb.ToString();
    }

  }

}

/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace NetFramework.Auto
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class ArmyInfo : TBase
  {
    private int _id;
    private string _name;
    private sbyte _level;
    private int _prosperity;
    private string _bulletinBoardContent;
    private List<ArmyMemberInfo> _memberInfoList;
    private bool _disband;
    private int _beginDisbandTime;

    public int Id
    {
      get
      {
        return _id;
      }
      set
      {
        __isset.id = true;
        this._id = value;
      }
    }

    public string Name
    {
      get
      {
        return _name;
      }
      set
      {
        __isset.name = true;
        this._name = value;
      }
    }

    public sbyte Level
    {
      get
      {
        return _level;
      }
      set
      {
        __isset.level = true;
        this._level = value;
      }
    }

    public int Prosperity
    {
      get
      {
        return _prosperity;
      }
      set
      {
        __isset.prosperity = true;
        this._prosperity = value;
      }
    }

    public string BulletinBoardContent
    {
      get
      {
        return _bulletinBoardContent;
      }
      set
      {
        __isset.bulletinBoardContent = true;
        this._bulletinBoardContent = value;
      }
    }

    public List<ArmyMemberInfo> MemberInfoList
    {
      get
      {
        return _memberInfoList;
      }
      set
      {
        __isset.memberInfoList = true;
        this._memberInfoList = value;
      }
    }

    public bool Disband
    {
      get
      {
        return _disband;
      }
      set
      {
        __isset.disband = true;
        this._disband = value;
      }
    }

    public int BeginDisbandTime
    {
      get
      {
        return _beginDisbandTime;
      }
      set
      {
        __isset.beginDisbandTime = true;
        this._beginDisbandTime = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool id;
      public bool name;
      public bool level;
      public bool prosperity;
      public bool bulletinBoardContent;
      public bool memberInfoList;
      public bool disband;
      public bool beginDisbandTime;
    }

    public ArmyInfo() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 10:
            if (field.Type == TType.I32) {
              Id = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 20:
            if (field.Type == TType.String) {
              Name = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 30:
            if (field.Type == TType.Byte) {
              Level = iprot.ReadByte();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 40:
            if (field.Type == TType.I32) {
              Prosperity = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 50:
            if (field.Type == TType.String) {
              BulletinBoardContent = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 100:
            if (field.Type == TType.List) {
              {
                MemberInfoList = new List<ArmyMemberInfo>();
                TList _list0 = iprot.ReadListBegin();
                for( int _i1 = 0; _i1 < _list0.Count; ++_i1)
                {
                  ArmyMemberInfo _elem2 = new ArmyMemberInfo();
                  _elem2 = new ArmyMemberInfo();
                  _elem2.Read(iprot);
                  MemberInfoList.Add(_elem2);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 110:
            if (field.Type == TType.Bool) {
              Disband = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 120:
            if (field.Type == TType.I32) {
              BeginDisbandTime = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("ArmyInfo");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.id) {
        field.Name = "id";
        field.Type = TType.I32;
        field.ID = 10;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Id);
        oprot.WriteFieldEnd();
      }
      if (Name != null && __isset.name) {
        field.Name = "name";
        field.Type = TType.String;
        field.ID = 20;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Name);
        oprot.WriteFieldEnd();
      }
      if (__isset.level) {
        field.Name = "level";
        field.Type = TType.Byte;
        field.ID = 30;
        oprot.WriteFieldBegin(field);
        oprot.WriteByte(Level);
        oprot.WriteFieldEnd();
      }
      if (__isset.prosperity) {
        field.Name = "prosperity";
        field.Type = TType.I32;
        field.ID = 40;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Prosperity);
        oprot.WriteFieldEnd();
      }
      if (BulletinBoardContent != null && __isset.bulletinBoardContent) {
        field.Name = "bulletinBoardContent";
        field.Type = TType.String;
        field.ID = 50;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(BulletinBoardContent);
        oprot.WriteFieldEnd();
      }
      if (MemberInfoList != null && __isset.memberInfoList) {
        field.Name = "memberInfoList";
        field.Type = TType.List;
        field.ID = 100;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.Struct, MemberInfoList.Count));
          foreach (ArmyMemberInfo _iter3 in MemberInfoList)
          {
            _iter3.Write(oprot);
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      if (__isset.disband) {
        field.Name = "disband";
        field.Type = TType.Bool;
        field.ID = 110;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(Disband);
        oprot.WriteFieldEnd();
      }
      if (__isset.beginDisbandTime) {
        field.Name = "beginDisbandTime";
        field.Type = TType.I32;
        field.ID = 120;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(BeginDisbandTime);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("ArmyInfo(");
      sb.Append("Id: ");
      sb.Append(Id);
      sb.Append(",Name: ");
      sb.Append(Name);
      sb.Append(",Level: ");
      sb.Append(Level);
      sb.Append(",Prosperity: ");
      sb.Append(Prosperity);
      sb.Append(",BulletinBoardContent: ");
      sb.Append(BulletinBoardContent);
      sb.Append(",MemberInfoList: ");
      sb.Append(MemberInfoList);
      sb.Append(",Disband: ");
      sb.Append(Disband);
      sb.Append(",BeginDisbandTime: ");
      sb.Append(BeginDisbandTime);
      sb.Append(")");
      return sb.ToString();
    }

  }

}

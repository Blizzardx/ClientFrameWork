/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace NetFramework.Auto
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class SCSyncHeroGroupMsg : TBase
  {
    private List<long> _heroGroup1;
    private List<long> _heroGroup2;
    private List<long> _heroGroup3;

    public List<long> HeroGroup1
    {
      get
      {
        return _heroGroup1;
      }
      set
      {
        __isset.heroGroup1 = true;
        this._heroGroup1 = value;
      }
    }

    public List<long> HeroGroup2
    {
      get
      {
        return _heroGroup2;
      }
      set
      {
        __isset.heroGroup2 = true;
        this._heroGroup2 = value;
      }
    }

    public List<long> HeroGroup3
    {
      get
      {
        return _heroGroup3;
      }
      set
      {
        __isset.heroGroup3 = true;
        this._heroGroup3 = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool heroGroup1;
      public bool heroGroup2;
      public bool heroGroup3;
    }

    public SCSyncHeroGroupMsg() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 10:
            if (field.Type == TType.List) {
              {
                HeroGroup1 = new List<long>();
                TList _list56 = iprot.ReadListBegin();
                for( int _i57 = 0; _i57 < _list56.Count; ++_i57)
                {
                  long _elem58 = 0;
                  _elem58 = iprot.ReadI64();
                  HeroGroup1.Add(_elem58);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 20:
            if (field.Type == TType.List) {
              {
                HeroGroup2 = new List<long>();
                TList _list59 = iprot.ReadListBegin();
                for( int _i60 = 0; _i60 < _list59.Count; ++_i60)
                {
                  long _elem61 = 0;
                  _elem61 = iprot.ReadI64();
                  HeroGroup2.Add(_elem61);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 30:
            if (field.Type == TType.List) {
              {
                HeroGroup3 = new List<long>();
                TList _list62 = iprot.ReadListBegin();
                for( int _i63 = 0; _i63 < _list62.Count; ++_i63)
                {
                  long _elem64 = 0;
                  _elem64 = iprot.ReadI64();
                  HeroGroup3.Add(_elem64);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("SCSyncHeroGroupMsg");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (HeroGroup1 != null && __isset.heroGroup1) {
        field.Name = "heroGroup1";
        field.Type = TType.List;
        field.ID = 10;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.I64, HeroGroup1.Count));
          foreach (long _iter65 in HeroGroup1)
          {
            oprot.WriteI64(_iter65);
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      if (HeroGroup2 != null && __isset.heroGroup2) {
        field.Name = "heroGroup2";
        field.Type = TType.List;
        field.ID = 20;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.I64, HeroGroup2.Count));
          foreach (long _iter66 in HeroGroup2)
          {
            oprot.WriteI64(_iter66);
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      if (HeroGroup3 != null && __isset.heroGroup3) {
        field.Name = "heroGroup3";
        field.Type = TType.List;
        field.ID = 30;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.I64, HeroGroup3.Count));
          foreach (long _iter67 in HeroGroup3)
          {
            oprot.WriteI64(_iter67);
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("SCSyncHeroGroupMsg(");
      sb.Append("HeroGroup1: ");
      sb.Append(HeroGroup1);
      sb.Append(",HeroGroup2: ");
      sb.Append(HeroGroup2);
      sb.Append(",HeroGroup3: ");
      sb.Append(HeroGroup3);
      sb.Append(")");
      return sb.ToString();
    }

  }

}

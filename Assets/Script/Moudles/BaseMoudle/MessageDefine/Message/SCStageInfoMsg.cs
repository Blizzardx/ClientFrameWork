/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace NetFramework.Auto
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class SCStageInfoMsg : TBase
  {
    private NetFramework.Auto.SystemInfo _failSystemInfo;
    private int _stageId;
    private int _terrainEditorId;
    private List<List<NetFramework.Auto.MonsterInfo>> _monsterGroupList;
    private NetFramework.Auto.NormalStageInfo _normalStageInfo;
    private NetFramework.Auto.TowerDefenseStageInfo _tdStageInfo;
    private NetFramework.Auto.EscortStageInfo _escortStageInfo;

    public NetFramework.Auto.SystemInfo FailSystemInfo
    {
      get
      {
        return _failSystemInfo;
      }
      set
      {
        __isset.failSystemInfo = true;
        this._failSystemInfo = value;
      }
    }

    public int StageId
    {
      get
      {
        return _stageId;
      }
      set
      {
        __isset.stageId = true;
        this._stageId = value;
      }
    }

    public int TerrainEditorId
    {
      get
      {
        return _terrainEditorId;
      }
      set
      {
        __isset.terrainEditorId = true;
        this._terrainEditorId = value;
      }
    }

    public List<List<NetFramework.Auto.MonsterInfo>> MonsterGroupList
    {
      get
      {
        return _monsterGroupList;
      }
      set
      {
        __isset.monsterGroupList = true;
        this._monsterGroupList = value;
      }
    }

    public NetFramework.Auto.NormalStageInfo NormalStageInfo
    {
      get
      {
        return _normalStageInfo;
      }
      set
      {
        __isset.normalStageInfo = true;
        this._normalStageInfo = value;
      }
    }

    public NetFramework.Auto.TowerDefenseStageInfo TdStageInfo
    {
      get
      {
        return _tdStageInfo;
      }
      set
      {
        __isset.tdStageInfo = true;
        this._tdStageInfo = value;
      }
    }

    public NetFramework.Auto.EscortStageInfo EscortStageInfo
    {
      get
      {
        return _escortStageInfo;
      }
      set
      {
        __isset.escortStageInfo = true;
        this._escortStageInfo = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool failSystemInfo;
      public bool stageId;
      public bool terrainEditorId;
      public bool monsterGroupList;
      public bool normalStageInfo;
      public bool tdStageInfo;
      public bool escortStageInfo;
    }

    public SCStageInfoMsg() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 10:
            if (field.Type == TType.Struct) {
              FailSystemInfo = new NetFramework.Auto.SystemInfo();
              FailSystemInfo.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 20:
            if (field.Type == TType.I32) {
              StageId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 30:
            if (field.Type == TType.I32) {
              TerrainEditorId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 40:
            if (field.Type == TType.List) {
              {
                MonsterGroupList = new List<List<NetFramework.Auto.MonsterInfo>>();
                TList _list0 = iprot.ReadListBegin();
                for( int _i1 = 0; _i1 < _list0.Count; ++_i1)
                {
                  List<NetFramework.Auto.MonsterInfo> _elem2 = new List<NetFramework.Auto.MonsterInfo>();
                  {
                    _elem2 = new List<NetFramework.Auto.MonsterInfo>();
                    TList _list3 = iprot.ReadListBegin();
                    for( int _i4 = 0; _i4 < _list3.Count; ++_i4)
                    {
                      NetFramework.Auto.MonsterInfo _elem5 = new NetFramework.Auto.MonsterInfo();
                      _elem5 = new NetFramework.Auto.MonsterInfo();
                      _elem5.Read(iprot);
                      _elem2.Add(_elem5);
                    }
                    iprot.ReadListEnd();
                  }
                  MonsterGroupList.Add(_elem2);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 50:
            if (field.Type == TType.Struct) {
              NormalStageInfo = new NetFramework.Auto.NormalStageInfo();
              NormalStageInfo.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 60:
            if (field.Type == TType.Struct) {
              TdStageInfo = new NetFramework.Auto.TowerDefenseStageInfo();
              TdStageInfo.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 70:
            if (field.Type == TType.Struct) {
              EscortStageInfo = new NetFramework.Auto.EscortStageInfo();
              EscortStageInfo.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("SCStageInfoMsg");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (FailSystemInfo != null && __isset.failSystemInfo) {
        field.Name = "failSystemInfo";
        field.Type = TType.Struct;
        field.ID = 10;
        oprot.WriteFieldBegin(field);
        FailSystemInfo.Write(oprot);
        oprot.WriteFieldEnd();
      }
      if (__isset.stageId) {
        field.Name = "stageId";
        field.Type = TType.I32;
        field.ID = 20;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(StageId);
        oprot.WriteFieldEnd();
      }
      if (__isset.terrainEditorId) {
        field.Name = "terrainEditorId";
        field.Type = TType.I32;
        field.ID = 30;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(TerrainEditorId);
        oprot.WriteFieldEnd();
      }
      if (MonsterGroupList != null && __isset.monsterGroupList) {
        field.Name = "monsterGroupList";
        field.Type = TType.List;
        field.ID = 40;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.List, MonsterGroupList.Count));
          foreach (List<NetFramework.Auto.MonsterInfo> _iter6 in MonsterGroupList)
          {
            {
              oprot.WriteListBegin(new TList(TType.Struct, _iter6.Count));
              foreach (NetFramework.Auto.MonsterInfo _iter7 in _iter6)
              {
                _iter7.Write(oprot);
              }
              oprot.WriteListEnd();
            }
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      if (NormalStageInfo != null && __isset.normalStageInfo) {
        field.Name = "normalStageInfo";
        field.Type = TType.Struct;
        field.ID = 50;
        oprot.WriteFieldBegin(field);
        NormalStageInfo.Write(oprot);
        oprot.WriteFieldEnd();
      }
      if (TdStageInfo != null && __isset.tdStageInfo) {
        field.Name = "tdStageInfo";
        field.Type = TType.Struct;
        field.ID = 60;
        oprot.WriteFieldBegin(field);
        TdStageInfo.Write(oprot);
        oprot.WriteFieldEnd();
      }
      if (EscortStageInfo != null && __isset.escortStageInfo) {
        field.Name = "escortStageInfo";
        field.Type = TType.Struct;
        field.ID = 70;
        oprot.WriteFieldBegin(field);
        EscortStageInfo.Write(oprot);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("SCStageInfoMsg(");
      sb.Append("FailSystemInfo: ");
      sb.Append(FailSystemInfo== null ? "<null>" : FailSystemInfo.ToString());
      sb.Append(",StageId: ");
      sb.Append(StageId);
      sb.Append(",TerrainEditorId: ");
      sb.Append(TerrainEditorId);
      sb.Append(",MonsterGroupList: ");
      sb.Append(MonsterGroupList);
      sb.Append(",NormalStageInfo: ");
      sb.Append(NormalStageInfo== null ? "<null>" : NormalStageInfo.ToString());
      sb.Append(",TdStageInfo: ");
      sb.Append(TdStageInfo== null ? "<null>" : TdStageInfo.ToString());
      sb.Append(",EscortStageInfo: ");
      sb.Append(EscortStageInfo== null ? "<null>" : EscortStageInfo.ToString());
      sb.Append(")");
      return sb.ToString();
    }

  }

}

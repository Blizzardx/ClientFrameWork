/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace NetFramework.Auto
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class FriendInfo : TBase
  {
    private int _friendId;
    private string _friendName;
    private string _headIcon;
    private short _friendLevel;
    private int _sceneId;
    private int _battleValue;
    private int _closeValue;

    public int FriendId
    {
      get
      {
        return _friendId;
      }
      set
      {
        __isset.friendId = true;
        this._friendId = value;
      }
    }

    public string FriendName
    {
      get
      {
        return _friendName;
      }
      set
      {
        __isset.friendName = true;
        this._friendName = value;
      }
    }

    public string HeadIcon
    {
      get
      {
        return _headIcon;
      }
      set
      {
        __isset.headIcon = true;
        this._headIcon = value;
      }
    }

    public short FriendLevel
    {
      get
      {
        return _friendLevel;
      }
      set
      {
        __isset.friendLevel = true;
        this._friendLevel = value;
      }
    }

    public int SceneId
    {
      get
      {
        return _sceneId;
      }
      set
      {
        __isset.sceneId = true;
        this._sceneId = value;
      }
    }

    public int BattleValue
    {
      get
      {
        return _battleValue;
      }
      set
      {
        __isset.battleValue = true;
        this._battleValue = value;
      }
    }

    public int CloseValue
    {
      get
      {
        return _closeValue;
      }
      set
      {
        __isset.closeValue = true;
        this._closeValue = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool friendId;
      public bool friendName;
      public bool headIcon;
      public bool friendLevel;
      public bool sceneId;
      public bool battleValue;
      public bool closeValue;
    }

    public FriendInfo() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 10:
            if (field.Type == TType.I32) {
              FriendId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 20:
            if (field.Type == TType.String) {
              FriendName = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 30:
            if (field.Type == TType.String) {
              HeadIcon = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 40:
            if (field.Type == TType.I16) {
              FriendLevel = iprot.ReadI16();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 50:
            if (field.Type == TType.I32) {
              SceneId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 60:
            if (field.Type == TType.I32) {
              BattleValue = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 70:
            if (field.Type == TType.I32) {
              CloseValue = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("FriendInfo");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.friendId) {
        field.Name = "friendId";
        field.Type = TType.I32;
        field.ID = 10;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(FriendId);
        oprot.WriteFieldEnd();
      }
      if (FriendName != null && __isset.friendName) {
        field.Name = "friendName";
        field.Type = TType.String;
        field.ID = 20;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(FriendName);
        oprot.WriteFieldEnd();
      }
      if (HeadIcon != null && __isset.headIcon) {
        field.Name = "headIcon";
        field.Type = TType.String;
        field.ID = 30;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(HeadIcon);
        oprot.WriteFieldEnd();
      }
      if (__isset.friendLevel) {
        field.Name = "friendLevel";
        field.Type = TType.I16;
        field.ID = 40;
        oprot.WriteFieldBegin(field);
        oprot.WriteI16(FriendLevel);
        oprot.WriteFieldEnd();
      }
      if (__isset.sceneId) {
        field.Name = "sceneId";
        field.Type = TType.I32;
        field.ID = 50;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(SceneId);
        oprot.WriteFieldEnd();
      }
      if (__isset.battleValue) {
        field.Name = "battleValue";
        field.Type = TType.I32;
        field.ID = 60;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(BattleValue);
        oprot.WriteFieldEnd();
      }
      if (__isset.closeValue) {
        field.Name = "closeValue";
        field.Type = TType.I32;
        field.ID = 70;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(CloseValue);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("FriendInfo(");
      sb.Append("FriendId: ");
      sb.Append(FriendId);
      sb.Append(",FriendName: ");
      sb.Append(FriendName);
      sb.Append(",HeadIcon: ");
      sb.Append(HeadIcon);
      sb.Append(",FriendLevel: ");
      sb.Append(FriendLevel);
      sb.Append(",SceneId: ");
      sb.Append(SceneId);
      sb.Append(",BattleValue: ");
      sb.Append(BattleValue);
      sb.Append(",CloseValue: ");
      sb.Append(CloseValue);
      sb.Append(")");
      return sb.ToString();
    }

  }

}

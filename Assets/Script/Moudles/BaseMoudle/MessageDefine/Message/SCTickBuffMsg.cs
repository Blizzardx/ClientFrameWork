/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace NetFramework.Auto
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class SCTickBuffMsg : TBase
  {
    private long _uniqueId;
    private int _buffId;
    private List<long> _targetUniqueIdList;
    private NetFramework.Auto.FuncContext _context;

    public long UniqueId
    {
      get
      {
        return _uniqueId;
      }
      set
      {
        __isset.uniqueId = true;
        this._uniqueId = value;
      }
    }

    public int BuffId
    {
      get
      {
        return _buffId;
      }
      set
      {
        __isset.buffId = true;
        this._buffId = value;
      }
    }

    public List<long> TargetUniqueIdList
    {
      get
      {
        return _targetUniqueIdList;
      }
      set
      {
        __isset.targetUniqueIdList = true;
        this._targetUniqueIdList = value;
      }
    }

    public NetFramework.Auto.FuncContext Context
    {
      get
      {
        return _context;
      }
      set
      {
        __isset.context = true;
        this._context = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool uniqueId;
      public bool buffId;
      public bool targetUniqueIdList;
      public bool context;
    }

    public SCTickBuffMsg() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 10:
            if (field.Type == TType.I64) {
              UniqueId = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 20:
            if (field.Type == TType.I32) {
              BuffId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 30:
            if (field.Type == TType.List) {
              {
                TargetUniqueIdList = new List<long>();
                TList _list36 = iprot.ReadListBegin();
                for( int _i37 = 0; _i37 < _list36.Count; ++_i37)
                {
                  long _elem38 = 0;
                  _elem38 = iprot.ReadI64();
                  TargetUniqueIdList.Add(_elem38);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 40:
            if (field.Type == TType.Struct) {
              Context = new NetFramework.Auto.FuncContext();
              Context.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("SCTickBuffMsg");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.uniqueId) {
        field.Name = "uniqueId";
        field.Type = TType.I64;
        field.ID = 10;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(UniqueId);
        oprot.WriteFieldEnd();
      }
      if (__isset.buffId) {
        field.Name = "buffId";
        field.Type = TType.I32;
        field.ID = 20;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(BuffId);
        oprot.WriteFieldEnd();
      }
      if (TargetUniqueIdList != null && __isset.targetUniqueIdList) {
        field.Name = "targetUniqueIdList";
        field.Type = TType.List;
        field.ID = 30;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.I64, TargetUniqueIdList.Count));
          foreach (long _iter39 in TargetUniqueIdList)
          {
            oprot.WriteI64(_iter39);
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      if (Context != null && __isset.context) {
        field.Name = "context";
        field.Type = TType.Struct;
        field.ID = 40;
        oprot.WriteFieldBegin(field);
        Context.Write(oprot);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("SCTickBuffMsg(");
      sb.Append("UniqueId: ");
      sb.Append(UniqueId);
      sb.Append(",BuffId: ");
      sb.Append(BuffId);
      sb.Append(",TargetUniqueIdList: ");
      sb.Append(TargetUniqueIdList);
      sb.Append(",Context: ");
      sb.Append(Context== null ? "<null>" : Context.ToString());
      sb.Append(")");
      return sb.ToString();
    }

  }

}

using NetFramework.Auto;
using UnityEngine;
using System.Collections;

public class MessageDefine : Singleton<MessageDefine>
{
    public void RegisterMessage()
    {
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_PING,typeof(CSPingMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_REGISTER,typeof(CSRegisterMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_LOGIN,typeof(CSLoginMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_RANDOM_NAME,typeof(CSRandomNameMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_CREATE_NEW_CHAR,typeof(CSCreateNewCharMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_COLLECT_EXCEPTION,typeof(CSCollectExceptionMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_CHAT,typeof(CSChatMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_CHAT_SETTING,typeof(CSChatSettingMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_HERO_STAR_LEVEL_UP,typeof(CSHeroStarLevelUpMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_HERO_QUALITY_LEVEL_UP,typeof(CSHeroQualityLevelUpMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_USE_ITEM,typeof(CSUseItemMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_STAGE_QUICK_WIN,typeof(CSStageQuickWinMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_GET_CHAPTER_AWARD,typeof(CSGetChapterAwardMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_HERO_SKILL_LEVEL_UP,typeof(CSHeroSkillLevelUpMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_HERO_SKILL_QUALITY_LEVEL_UP,typeof(CSHeroSkillQualityLevelUpMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_ENTER_STAGE,typeof(CSEnterStageMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_BATTLE_END,typeof(CSBattleEndMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_BEGIN_LOAD_STAGE,typeof(CSBeginLoadStageMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_END_LOAD_STAGE,typeof(CSEndLoadStageMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_END_SHOW_EFFECT,typeof(CSEndShowEffectMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_CHANGE_BATTLE_MODE,typeof(CSChangeBattleModeMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_EXIT_STAGE,typeof(CSExitStageMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_MOVE_TO,typeof(CSMoveToMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_PRE_USE_SKILL,typeof(CSPreUseSkillMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_SWITCH_TARGET,typeof(CSSwitchTargetMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_FOCUS_TARGET,typeof(CSFocusTargetMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_SUSPEND_BATTLE,typeof(CSSuspendBattleMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_RESUME_BATTLE,typeof(CSResumeBattleMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_SYNTHETIC_HERO,typeof(CSSyntheticHeroMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_EXEC_TRIGGER,typeof(CSExecTriggerMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_SYNC_PUTON_SKILL,typeof(CSSyncPutOnSkillMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_CHAR_SKILL_LEVEL_UP,typeof(CSCharSkillLevelUpMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_PICK_UP_ITEM,typeof(CSPickUpItemMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_SYNC_HERO_GROUP,typeof(CSSyncHeroGroupMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_PLAY_FINGER_GUESSING,typeof(CSPlayFingerGuessingMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_QUERY_HERO_RECRUIT_LIST,typeof(CSQueryHeroRecruitListMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_REFRESH_HERO_RECRUIT_LIST,typeof(CSRefreshHeroRecruitListMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_GIVE_GIFT_TO_HERO_RECRUIT,typeof(CSGiveGiftToHeroRecruitMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_GIVE_MONEY_TO_HERO_RECRUIT,typeof(CSGiveMoneyToHeroRecruitMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_RECRUIT_HERO,typeof(CSRecruitHeroMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_PUT_ON_HERO_EQUIPMENT,typeof(CSPutOnHeroEquipmentMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_TAKE_OFF_HERO_EQUIPMENT,typeof(CSTakeOffHeroEquipmentMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_HERO_EQUIPMENT_ENHANCE,typeof(CSHeroEquipmentEnhanceMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_CHAR_EQUIPMENT_BRING_UP,typeof(CSCharEquipmentBringUpMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_INLAY_GEM,typeof(CSInlayGemMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_REMOVE_GEM,typeof(CSRemoveGemMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_CHAR_EQUIPMENT_LEVEL_UP,typeof(CSCharEquipmentLevelUpMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_QUICK_COMPLETE_EQUIPMENT_BRING_UP,typeof(CSQuickCompleteEquipmentBringUpMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_CANCEL_EQUIPMENT_BRING_UP,typeof(CSCancelEquipmentBringUpMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_BUY_HERO_SKILL_POINT,typeof(CSBuyHeroSkillPointMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_ACCEPT_MISSION,typeof(CSAccpetMissionMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_COMPLETE_MISSION,typeof(CSCompleteMission));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_COMPLETE_MISSION_STEP,typeof(CSCompleteMissionStep));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_ENTER_SCENE_SYNC,typeof(CSEnterSceneSyncMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_EXIT_SCENE_SYNC,typeof(CSExitSceneSyncMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_SCENE_CHARINFO_SYNC, typeof(CSSceneCharInfoSync));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_CREATE_ARMY,typeof(CSCreateArmyMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_QUERY_ARMY_LIST,typeof(CSQueryArmyListMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_SEARCH_ARMY,typeof(CSSearchArmyMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_QUERY_APPLY_JOIN_ARMY_LIST,typeof(CSQueryApplyJoinArmyListMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_APPLY_JOIN_ARMY,typeof(CSApplyJoinArmyMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_HANDLE_APPLY_JOIN,typeof(CSHandleApplyJoinMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_EXIT_ARMY,typeof(CSExitArmyMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_KICK_EXIT_ARMY,typeof(CSKickExitArmyMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_APPLY_DISBAND_ARMY,typeof(CSApplyDisbandArmyMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_CANCEL_DISBAND_ARMY,typeof(CSCancelDisbandArmyMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_SHARE_HERO,typeof(CSShareHeroMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_CLEAR_APPLY_JOIN_LIST,typeof(CSClearApplyJoinListMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_MODIFY_ARMY_MEMBER_ROLE,typeof(CSModifyArmyMemberRoleMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.CS_UPDATE_ARMY_BULLETIN_BOARD_CONTENT,typeof(CSUpdateArmyBulletinBoardContentMsg));


        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_PING,typeof(SCPingMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_SYSTEM_INFO,typeof(SCSystemInfoMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_SERVER_INFO,typeof(SCServerInfoMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_REGISTER,typeof(SCRegisterMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_LOGIN,typeof(SCLoginMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_RELOGIN,typeof(SCReLoginMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_CHARACTER_INFO,typeof(SCCharacterInfoMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_BAG_INFO,typeof(SCBagInfoMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_RANDOM_NAME,typeof(SCRandomNameMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_ENTER_GAME,typeof(SCEnterGameMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_CHAT,typeof(SCChatMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_CHAT_RESULT,typeof(SCChatResultMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_NOTICE_CREATE_NEW_CHAR,typeof(SCNoticeCreateNewCharMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_SYNC_CHARACTER_PROPERTY,typeof(SCSyncCharacterPropertyMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_ADD_HERO,typeof(SCAddHeroMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_ADD_PROPS,typeof(SCAddPropsMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_CHANGE_PROPS_COUNT,typeof(SCChangePropsCountMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_HERO_STAR_LEVEL_UP,typeof(SCHeroStarLevelUpMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_HERO_QUALITY_LEVEL_UP,typeof(SCHeroQualityLevelUpMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_USE_ITEM,typeof(SCUseItemMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_STAGE_QUICK_WIN,typeof(SCStageQuickWinMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_GET_CHAPTER_AWARD,typeof(SCGetChapterAwardMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_HERO_SKILL_QUALITY_LEVEL_UP,typeof(SCHeroSkillQualityLevelUpMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_STAGE_INFO,typeof(SCStageInfoMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_BATTLE_RESULT,typeof(SCBattleReusltMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_BEGIN_LOAD_STAGE,typeof(SCBeginLoadStageMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_ENTER_STAGE,typeof(SCEnterStageMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_START_BATTLE,typeof(SCStartBattleMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_EXIT_STAGE,typeof(SCExitStageMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_REFRESH_MONSTER,typeof(SCRefreshMonsterMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_MONSTER_DEATH,typeof(SCMonsterDeathMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_BATTLE_FINISH,typeof(SCBattleFinishMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_HERO_DEATH,typeof(SCHeroDeathMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_MOVE_TO,typeof(SCMoveToMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_ADJUST_POS,typeof(SCAdjustPosMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_PRE_USE_SKILL,typeof(SCPreUseSkillMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_USE_SKILL,typeof(SCUseSkillMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_CANCEL_SKILL,typeof(SCCancelSkillMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_LIFE_ENTER_STATE,typeof(SCLifeEnterStateMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_ADD_BUFF,typeof(SCAddBuffMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_TICK_BUFF,typeof(SCTickBuffMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_DEL_BUFF,typeof(SCDelBuffMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_SYNC_BATTLE_LIFE_INFO,typeof(SCSyncBattleLifeInfoMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_SYNTHETIC_HERO,typeof(SCSyntheticHeroMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_EXEC_FUNC,typeof(SCExecFuncMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_FOCUS_TARGET,typeof(SCFocusTargetMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_CREATE_NEW_CHAR,typeof(SCCreateNewCharMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_PUTON_AURA,typeof(SCPutOnAuraMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_TAKEOFF_AURA,typeof(SCTakeOffAuraMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_TICK_AURA,typeof(SCTickAuraMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_LEAVE_AURA,typeof(SCLeaveAuraMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_TICK_TRIGGER,typeof(SCTickTriggerMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_LEAVE_TRIGGER,typeof(SCLeaveTriggerMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_CREATE_TRIGGER,typeof(SCCreateTriggerMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_DELETE_TRIGGER,typeof(SCDeleteTriggerMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_BEAT_BACK,typeof(SCBeatBackMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_TOGGLE_TRIGGER,typeof(SCToggleTriggerMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_DROP_ITEM,typeof(SCDropItemMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_PLAY_FINGER_GUESSING,typeof(SCPlayFingerGuessingMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_SYNC_HERO_GROUP,typeof(SCSyncHeroGroupMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_HERO_RECRUIT_PROGRESS,typeof(SCHeroRecruitProgressMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_HERO_RECRUIT_LIST,typeof(SCHeroRecruitListMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_RECRUIT_HERO,typeof(SCRecruitHeroMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_ADD_HERO_EQUIPMENT,typeof(SCAddHeroEquipmentMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_PUT_ON_HERO_EQUIPMENT,typeof(SCPutOnHeroEquipmentMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_TAKE_OFF_HERO_EQUIPMENT,typeof(SCTakeOffHeroEquipmentMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_CHAR_EQUIPMENT_BRING_UP,typeof(SCCharEquipmentBringUpMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_CHAR_EQUIPMENT_BRING_UP_COMPLATE,typeof(SCCharEquipmentBringUpComplateMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_INLAY_GEM,typeof(SCInlayGemMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_REMOVE_GEM,typeof(SCRemoveGemMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_GIVE_GIFT_TO_HERO_RECRUIT,typeof(SCGiveGiftToHeroRecruitMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_GIVE_MONEY_TO_HERO_RECRUIT,typeof(SCGiveMoneyToHeroRecruitMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_CHAR_EQUIPMENT_LEVEL_UP,typeof(SCCharEquipmentLevelUpMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_ADD_GEM,typeof(SCAddGemMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_CANCEL_EQUIPMENT_BRING_UP,typeof(SCCancelEquipmentBringUpMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_ACCEPT_MISSION,typeof(SCAccpetMissionMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_COMPLETE_MISSION,typeof(SCCompleteMission));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_COMPLETE_MISSION_STEP,typeof(SCCompleteMissionStepInfo));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_MISSION_INFO_LIST,typeof(SCSyncMissionInfo));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_BUY_HERO_SKILL_POINT,typeof(SCBuyHeroSkillPointMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_ENTER_SCENE_SYNC,typeof(SCEnterSceneSyncMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_EXIT_SCENE_SYNC,typeof(SCExitSceneSyncMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_SCENE_CHARINFO_SYNC,typeof(SCSceneCharInfoSync));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_SINGLE_SCENE_CHARINFO_SYNC,typeof(SCSingleSceneCharInfoSyncMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_CREATE_ARMY,typeof(SCCreateArmyMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_QUERY_ARMY_LIST,typeof(SCQueryArmyListMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_SEARCH_ARMY,typeof(SCSearchArmyMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_ARMY_INFO,typeof(SCArmyInfoMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_ARMY_INFO_CHANGE,typeof(SCArmyInfoChangeMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_ARMY_MEMBER_INFO_CHANGE,typeof(SCArmyMemberInfoChangeMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_QUERY_APPLY_JOIN_ARMY_LIST,typeof(SCQueryApplyJoinArmyListMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_APPLY_JOIN_ARMY,typeof(SCApplyJoinArmyMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_CHARACTER_JOIN_ARMY,typeof(SCCharacterJoinArmyMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_EXIT_ARMY,typeof(SCExitArmyMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_CHARACTER_LEAVE_ARMY,typeof(SCCharacterLeaveArmyMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_KICK_EXIT_ARMY,typeof(SCKickExitArmyMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_APPLY_DISBAND_ARMY,typeof(SCApplyDisbandArmyMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_CANCEL_DISBAND_ARMY,typeof(SCCancelDisbandArmyMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_NOTICE_ARMY_DISBAND,typeof(SCNoticeArmyDisbandMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_NOTICE_HANLE_APPLY_JOIN,typeof(SCNoticeHandleApplyJoinMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_HANDLE_APPLY_JOIN,typeof(SCHandleApplyJoinMsg));
        NetWorkManager.Instance.RegisterMessage(MessageTypeConstants.SC_CLEAR_APPLY_JOIN_LIST,typeof(SCClearApplyJoinListMsg));

        NetWorkManager.Instance.RegisterMessage();
    }
}

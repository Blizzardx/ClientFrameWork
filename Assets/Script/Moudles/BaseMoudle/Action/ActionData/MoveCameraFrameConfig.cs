/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace ActionEditor
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class MoveCameraFrameConfig : TBase
  {
    private sbyte _moveType;
    private double _moveToTime;
    private double _StayTime;
    private double _moveBackTime;
    private double _distance;
    private double _height;
    private double _offseHeight;

    public sbyte MoveType
    {
      get
      {
        return _moveType;
      }
      set
      {
        __isset.moveType = true;
        this._moveType = value;
      }
    }

    public double MoveToTime
    {
      get
      {
        return _moveToTime;
      }
      set
      {
        __isset.moveToTime = true;
        this._moveToTime = value;
      }
    }

    public double StayTime
    {
      get
      {
        return _StayTime;
      }
      set
      {
        __isset.StayTime = true;
        this._StayTime = value;
      }
    }

    public double MoveBackTime
    {
      get
      {
        return _moveBackTime;
      }
      set
      {
        __isset.moveBackTime = true;
        this._moveBackTime = value;
      }
    }

    public double Distance
    {
      get
      {
        return _distance;
      }
      set
      {
        __isset.distance = true;
        this._distance = value;
      }
    }

    public double Height
    {
      get
      {
        return _height;
      }
      set
      {
        __isset.height = true;
        this._height = value;
      }
    }

    public double OffseHeight
    {
      get
      {
        return _offseHeight;
      }
      set
      {
        __isset.offseHeight = true;
        this._offseHeight = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool moveType;
      public bool moveToTime;
      public bool StayTime;
      public bool moveBackTime;
      public bool distance;
      public bool height;
      public bool offseHeight;
    }

    public MoveCameraFrameConfig() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.Byte) {
              MoveType = iprot.ReadByte();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 10:
            if (field.Type == TType.Double) {
              MoveToTime = iprot.ReadDouble();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 20:
            if (field.Type == TType.Double) {
              StayTime = iprot.ReadDouble();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 30:
            if (field.Type == TType.Double) {
              MoveBackTime = iprot.ReadDouble();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 40:
            if (field.Type == TType.Double) {
              Distance = iprot.ReadDouble();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 50:
            if (field.Type == TType.Double) {
              Height = iprot.ReadDouble();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 60:
            if (field.Type == TType.Double) {
              OffseHeight = iprot.ReadDouble();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("MoveCameraFrameConfig");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.moveType) {
        field.Name = "moveType";
        field.Type = TType.Byte;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteByte(MoveType);
        oprot.WriteFieldEnd();
      }
      if (__isset.moveToTime) {
        field.Name = "moveToTime";
        field.Type = TType.Double;
        field.ID = 10;
        oprot.WriteFieldBegin(field);
        oprot.WriteDouble(MoveToTime);
        oprot.WriteFieldEnd();
      }
      if (__isset.StayTime) {
        field.Name = "StayTime";
        field.Type = TType.Double;
        field.ID = 20;
        oprot.WriteFieldBegin(field);
        oprot.WriteDouble(StayTime);
        oprot.WriteFieldEnd();
      }
      if (__isset.moveBackTime) {
        field.Name = "moveBackTime";
        field.Type = TType.Double;
        field.ID = 30;
        oprot.WriteFieldBegin(field);
        oprot.WriteDouble(MoveBackTime);
        oprot.WriteFieldEnd();
      }
      if (__isset.distance) {
        field.Name = "distance";
        field.Type = TType.Double;
        field.ID = 40;
        oprot.WriteFieldBegin(field);
        oprot.WriteDouble(Distance);
        oprot.WriteFieldEnd();
      }
      if (__isset.height) {
        field.Name = "height";
        field.Type = TType.Double;
        field.ID = 50;
        oprot.WriteFieldBegin(field);
        oprot.WriteDouble(Height);
        oprot.WriteFieldEnd();
      }
      if (__isset.offseHeight) {
        field.Name = "offseHeight";
        field.Type = TType.Double;
        field.ID = 60;
        oprot.WriteFieldBegin(field);
        oprot.WriteDouble(OffseHeight);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("MoveCameraFrameConfig(");
      sb.Append("MoveType: ");
      sb.Append(MoveType);
      sb.Append(",MoveToTime: ");
      sb.Append(MoveToTime);
      sb.Append(",StayTime: ");
      sb.Append(StayTime);
      sb.Append(",MoveBackTime: ");
      sb.Append(MoveBackTime);
      sb.Append(",Distance: ");
      sb.Append(Distance);
      sb.Append(",Height: ");
      sb.Append(Height);
      sb.Append(",OffseHeight: ");
      sb.Append(OffseHeight);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
